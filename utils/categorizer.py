"""
Syst√®me de cat√©gorisation automatique des articles d'actualit√©
Adapt√© aux sources d'information africaines et congolaises
"""

import re

def categorize_article(title, content, source):
    """
    Cat√©gorise automatiquement un article bas√© sur son titre, contenu et source
    
    Args:
        title (str): Titre de l'article
        content (str): Contenu de l'article
        source (str): Source de l'article
    
    Returns:
        str: Cat√©gorie de l'article
    """
    if not title:
        return 'g√©n√©ral'
    
    title_lower = title.lower()
    content_lower = content.lower() if content else ""
    combined_text = f"{title_lower} {content_lower}"
    
    # === POLITIQUE ===
    politics_keywords = [
        'politique', 'gouvernement', 'pr√©sident', 'ministre', 'parlement',
        'assembl√©e', 's√©nat', 'd√©put√©', 's√©nateur', '√©lection', 'vote',
        'cabinet', 'premier ministre', 'opposition', 'parti politique',
        'tshisekedi', 'kabila', 'katumbi', 'bemba', 'kengo', 'lumumba',
        'kinshasa', 'palais de la nation', 'conseil des ministres',
        'constitution', 'd√©mocratie', 'dictature', 'coup d\'√©tat',
        'diplomatie', 'ambassadeur', 'consulat', 'chancellerie'
    ]
    
    # === √âCONOMIE ===
    economy_keywords = [
        '√©conomie', '√©conomique', 'dollar', 'franc', 'inflation', 'banque',
        'monnaie', 'devise', 'commerce', 'march√©', 'prix', 'co√ªt',
        'budget', 'finances', 'fiscal', 'investissement', 'entreprise',
        'business', 'industrie', 'production', 'exportation', 'importation',
        'pib', 'croissance', 'r√©cession', 'bourse', 'cr√©dit',
        'banque centrale', 'fmi', 'banque mondiale', 'dette',
        'cobalt', 'cuivre', 'or', 'diamant', 'coltan', 'minerai',
        'agriculture', 'caf√©', 'cacao', 'huile de palme'
    ]
    
    # === S√âCURIT√â ===
    security_keywords = [
        's√©curit√©', 'guerre', 'conflit', 'violence', 'arm√©e', 'militaire',
        'police', 'gendarmerie', 'soldat', 'casques bleus', 'monusco',
        'rebelle', 'milice', 'adf', 'm23', 'codeco', 'mai-mai',
        'terrorisme', 'kidnapping', 'enl√®vement', 'banditisme',
        'criminalit√©', 'vol', 'meurtre', 'assassinat', 'attentat',
        'nord-kivu', 'sud-kivu', 'ituri', 'goma', 'bukavu', 'bunia',
        'd√©plac√©s', 'r√©fugi√©s', 'camp de d√©plac√©s', 'hcr',
        'cessez-le-feu', 'accord de paix', 'm√©diation'
    ]
    
    # === SOCI√âT√â ===
    society_keywords = [
        'soci√©t√©', 'social', '√©ducation', '√©cole', 'universit√©', '√©tudiant',
        'sant√©', 'h√¥pital', 'm√©decin', 'maladie', '√©pid√©mie', 'vaccination',
        '√©bola', 'paludisme', 'covid', 'chol√©ra', 'rougeole',
        'famille', 'femme', 'enfant', 'jeune', 'vieux', '√¢g√©',
        'culture', 'tradition', 'langue', 'religion', '√©glise', 'mosqu√©e',
        'catholicisme', 'protestantisme', 'islam', 'animisme',
        'mariage', 'divorce', 'naissance', 'd√©c√®s', 'fun√©railles',
        'f√™te', 'c√©l√©bration', 'carnaval', 'festival'
    ]
    
    # === SPORT ===
    sport_keywords = [
        'sport', 'football', 'basket', 'volleyball', 'tennis', 'boxe',
        'athl√©tisme', 'natation', 'cyclisme', 'rugby', 'handball',
        'championnat', 'coupe', 'match', '√©quipe', 'joueur', 'entra√Æneur',
        'stade', 'terrain', 'ballon', 'but', 'score', 'victoire', 'd√©faite',
        'fifa', 'caf', 'chan', 'can', 'l√©opards', 'tp mazembe',
        'v.club', 'as vita club', 'dc motema pembe', 'fc saint eloi lupopo',
        'champion', 'titre', 'remporte', 'gagne', 'bat', 'battent',
        'comp√©tition', 'tournoi', 'finale', 'demi-finale', 'qualification'
    ]
    
    # === TECHNOLOGIE ===
    tech_keywords = [
        'technologie', 'num√©rique', 'digital', 'internet', 'web',
        'smartphone', 't√©l√©phone', 'mobile', 'ordinateur', 'laptop',
        'application', 'app', 'logiciel', 'software', 'programme',
        'intelligence artificielle', 'ia', 'robot', 'automatisation',
        'blockchain', 'cryptomonnaie', 'bitcoin', 'fintech',
        'startup', 'innovation', 'recherche', 'd√©veloppement',
        't√©l√©communication', 'r√©seau', '4g', '5g', 'fibre optique'
    ]
    
    # === INTERNATIONAL ===
    # Bas√© sur la source et les r√©f√©rences g√©ographiques
    international_sources = ['BBC News', 'France24']
    international_keywords = [
        'international', 'mondial', 'global', 'plan√®te', 'monde',
        '√©tats-unis', 'am√©rique', 'europe', 'asie', 'chine', 'russie',
        'france', 'belgique', 'allemagne', 'royaume-uni', 'onu',
        'union africaine', 'cedeao', 'sadc', 'cemac', 'comesa',
        'union europ√©enne', 'otan', 'g7', 'g20', 'sommet',
        'coop√©ration', 'aide', 'partenariat', 'accord bilat√©ral'
    ]
    
    # === ENVIRONNEMENT ===
    environment_keywords = [
        'environnement', 'climat', 'r√©chauffement', 'pollution',
        'd√©forestation', 'for√™t', 'parc national', 'biodiversit√©',
        'conservation', '√©cologie', '√©cologique', 'vert', 'durable',
        'carbone', '√©mission', 'gaz', 'effet de serre',
        'congo basin', 'virunga', 'garamba', 'upemba', 'kundelungu',
        'fleuve congo', 'lac tanganyika', 'lac kivu', 'lac albert',
        'changement climatique', 'impact', 'm√©t√©orologique',
        'gorilles', 'rangers', 'braconnage', 'protection', 'faune'
    ]
    
    # === LOGIQUE DE CAT√âGORISATION ===
    
    # V√©rifier chaque cat√©gorie en comptant les mots-cl√©s trouv√©s
    categories_scores = {
        'politique': sum(1 for keyword in politics_keywords if keyword in combined_text),
        '√©conomie': sum(1 for keyword in economy_keywords if keyword in combined_text),
        's√©curit√©': sum(1 for keyword in security_keywords if keyword in combined_text),
        'soci√©t√©': sum(1 for keyword in society_keywords if keyword in combined_text),
        'sport': sum(1 for keyword in sport_keywords if keyword in combined_text),
        'technologie': sum(1 for keyword in tech_keywords if keyword in combined_text),
        'environnement': sum(1 for keyword in environment_keywords if keyword in combined_text),
        'international': sum(1 for keyword in international_keywords if keyword in combined_text)
    }
    
    # Bonus pour les sources internationales
    if source in international_sources:
        categories_scores['international'] += 2
    
    # Bonus pour Radio Okapi (souvent politique/s√©curit√©)
    if source == 'Radio Okapi':
        categories_scores['politique'] += 1
        categories_scores['s√©curit√©'] += 1
    
    # Bonus pour MediaCongo (souvent √©conomie/soci√©t√©)
    if source == 'MediaCongo':
        categories_scores['√©conomie'] += 1
        categories_scores['soci√©t√©'] += 1
    
    # Trouver la cat√©gorie avec le score le plus √©lev√©
    best_category = max(categories_scores, key=categories_scores.get)
    best_score = categories_scores[best_category]
    
    # Si aucun mot-cl√© n'est trouv√©, retourner 'g√©n√©ral'
    if best_score == 0:
        return 'g√©n√©ral'
    
    return best_category

def get_all_categories():
    """
    Retourne la liste de toutes les cat√©gories disponibles
    """
    return [
        'politique',
        '√©conomie', 
        's√©curit√©',
        'soci√©t√©',
        'sport',
        'technologie',
        'international',
        'environnement',
        'g√©n√©ral'
    ]

def validate_category(category):
    """
    Valide qu'une cat√©gorie est dans la liste des cat√©gories accept√©es
    """
    return category in get_all_categories()

# Tests de la fonction
if __name__ == "__main__":
    # Test cases
    test_articles = [
        {
            'title': 'Le pr√©sident Tshisekedi rencontre son homologue fran√ßais',
            'content': 'Le pr√©sident de la R√©publique d√©mocratique du Congo...',
            'source': 'Radio Okapi',
            'expected': 'politique'
        },
        {
            'title': 'Le dollar baisse sur le march√© de Kinshasa',
            'content': 'Les prix des biens de premi√®re n√©cessit√©...',
            'source': 'MediaCongo',
            'expected': '√©conomie'
        },
        {
            'title': 'Les L√©opards battent le Cameroun 2-1',
            'content': 'L\'√©quipe nationale de football...',
            'source': 'Sur7CD',
            'expected': 'sport'
        },
        {
            'title': 'Nouveau smartphone lanc√© au Congo',
            'content': 'Une startup congolaise d√©veloppe...',
            'source': 'Tech Congo',
            'expected': 'technologie'
        }
    ]
    
    print("üß™ Tests de cat√©gorisation automatique:")
    for i, test in enumerate(test_articles, 1):
        result = categorize_article(test['title'], test['content'], test['source'])
        status = "‚úÖ" if result == test['expected'] else "‚ùå"
        print(f"{status} Test {i}: '{test['title'][:40]}...' ‚Üí {result} (attendu: {test['expected']})")
